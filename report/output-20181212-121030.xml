<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.7.0 on darwin)" generated="20181212 12:10:30.317" rpa="false">
<suite id="s1" name="Data Driven" source="/Users/bird/ASPN/JAYMART/CLS/robotdemo/data_driven.robot">
<test id="s1-t1" name="Addition">
<kw name="Calculate">
<arguments>
<arg>12 + 2 + 2</arg>
<arg>16</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.348" endtime="20181212 12:10:30.348"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.348" endtime="20181212 12:10:30.348"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.347" endtime="20181212 12:10:30.349"></status>
</kw>
<kw name="Calculate">
<arguments>
<arg>2 + -3</arg>
<arg>-1</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.349" endtime="20181212 12:10:30.350"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.350" endtime="20181212 12:10:30.350"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.349" endtime="20181212 12:10:30.350"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.347" endtime="20181212 12:10:30.350" critical="yes"></status>
</test>
<test id="s1-t2" name="Subtraction">
<kw name="Calculate">
<arguments>
<arg>12 - 2 - 2</arg>
<arg>8</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.351" endtime="20181212 12:10:30.351"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.351" endtime="20181212 12:10:30.352"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.351" endtime="20181212 12:10:30.352"></status>
</kw>
<kw name="Calculate">
<arguments>
<arg>2 - -3</arg>
<arg>5</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.352" endtime="20181212 12:10:30.352"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.352" endtime="20181212 12:10:30.353"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.352" endtime="20181212 12:10:30.353"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.350" endtime="20181212 12:10:30.353" critical="yes"></status>
</test>
<test id="s1-t3" name="Multiplication">
<kw name="Calculate">
<arguments>
<arg>12 * 2 * 2</arg>
<arg>48</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.354" endtime="20181212 12:10:30.354"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.354" endtime="20181212 12:10:30.354"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.353" endtime="20181212 12:10:30.354"></status>
</kw>
<kw name="Calculate">
<arguments>
<arg>2 * -3</arg>
<arg>-6</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.355" endtime="20181212 12:10:30.355"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.355" endtime="20181212 12:10:30.355"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.354" endtime="20181212 12:10:30.355"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.353" endtime="20181212 12:10:30.355" critical="yes"></status>
</test>
<test id="s1-t4" name="Division">
<kw name="Calculate">
<arguments>
<arg>12 / 2 / 2</arg>
<arg>3</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.356" endtime="20181212 12:10:30.356"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.357" endtime="20181212 12:10:30.357"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.356" endtime="20181212 12:10:30.357"></status>
</kw>
<kw name="Calculate">
<arguments>
<arg>2 / -3</arg>
<arg>-1</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.357" endtime="20181212 12:10:30.357"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.358" endtime="20181212 12:10:30.358"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.357" endtime="20181212 12:10:30.358"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.356" endtime="20181212 12:10:30.403" critical="yes"></status>
</test>
<test id="s1-t5" name="Failing">
<kw name="Calculate">
<arguments>
<arg>1 + 1</arg>
<arg>3</arg>
</arguments>
<kw name="Push Buttons" library="CalculatorLibrary">
<doc>Pushes the specified ``buttons``.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.405" endtime="20181212 12:10:30.405"></status>
</kw>
<kw name="Result Should Be" library="CalculatorLibrary">
<doc>Verifies that the current result is ``expected``.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20181212 12:10:30.406" level="FAIL">2 != 3</msg>
<status status="FAIL" starttime="20181212 12:10:30.405" endtime="20181212 12:10:30.406"></status>
</kw>
<status status="FAIL" starttime="20181212 12:10:30.404" endtime="20181212 12:10:30.407"></status>
</kw>
<status status="FAIL" starttime="20181212 12:10:30.404" endtime="20181212 12:10:30.407" critical="yes">2 != 3</status>
</test>
<test id="s1-t6" name="Calculation error">
<kw name="Calculation should fail">
<arguments>
<arg>kekkonen</arg>
<arg>Invalid button 'k'.</arg>
</arguments>
<kw name="Should Cause Error" library="CalculatorLibrary">
<doc>Verifies that calculating the given ``expression`` causes an error.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<assign>
<var>${error}</var>
</assign>
<msg timestamp="20181212 12:10:30.408" level="INFO">${error} = Invalid button 'k'.</msg>
<status status="PASS" starttime="20181212 12:10:30.408" endtime="20181212 12:10:30.408"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected}</arg>
<arg>${error}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.408" endtime="20181212 12:10:30.409"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.407" endtime="20181212 12:10:30.409"></status>
</kw>
<kw name="Calculation should fail">
<arguments>
<arg>${EMPTY}</arg>
<arg>Invalid expression.</arg>
</arguments>
<kw name="Should Cause Error" library="CalculatorLibrary">
<doc>Verifies that calculating the given ``expression`` causes an error.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<assign>
<var>${error}</var>
</assign>
<msg timestamp="20181212 12:10:30.410" level="INFO">${error} = Invalid expression.</msg>
<status status="PASS" starttime="20181212 12:10:30.410" endtime="20181212 12:10:30.410"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected}</arg>
<arg>${error}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.411" endtime="20181212 12:10:30.412"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.409" endtime="20181212 12:10:30.412"></status>
</kw>
<kw name="Calculation should fail">
<arguments>
<arg>1 / 0</arg>
<arg>Division by zero.</arg>
</arguments>
<kw name="Should Cause Error" library="CalculatorLibrary">
<doc>Verifies that calculating the given ``expression`` causes an error.</doc>
<arguments>
<arg>C${expression}=</arg>
</arguments>
<assign>
<var>${error}</var>
</assign>
<msg timestamp="20181212 12:10:30.414" level="INFO">${error} = Division by zero.</msg>
<status status="PASS" starttime="20181212 12:10:30.413" endtime="20181212 12:10:30.414"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected}</arg>
<arg>${error}</arg>
</arguments>
<status status="PASS" starttime="20181212 12:10:30.415" endtime="20181212 12:10:30.415"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.413" endtime="20181212 12:10:30.415"></status>
</kw>
<status status="PASS" starttime="20181212 12:10:30.407" endtime="20181212 12:10:30.416" critical="yes"></status>
</test>
<doc>Example test cases using the data-driven testing approach.

The _data-driven_ style works well when you need to repeat
the same workflow multiple times.

Tests use ``Calculate`` keyword created in this file, that in
turn uses keywords in ``CalculatorLibrary.py``. An exception
is the last test that has a custom _template keyword_.

Notice that one of these tests fails on purpose to show how
failures look like.</doc>
<status status="FAIL" starttime="20181212 12:10:30.318" endtime="20181212 12:10:30.416"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="1">Critical Tests</stat>
<stat pass="5" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="1" id="s1" name="Data Driven">Data Driven</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
